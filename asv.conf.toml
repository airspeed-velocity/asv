# The version of the config file format. Do not change, unless
# you know what you are doing.
version = 1

# The name of the project being benchmarked
project = "asv"

# The project's homepage
project_url = "https://github.com/airspeed-velocity/asv/"

# The URL or local path of the source code repository for the
# project being benchmarked
repo = "."

# List of branches to benchmark. If not provided, defaults to "main"
# (for git) or "default" (for mercurial).
branches = ["main"]  # for git

# The DVCS being used. If not set, it will be automatically
# determined from "repo" by looking at the protocol in the URL
# (if remote), or by looking for special directories, such as
# ".git" (if local).
dvcs = "git"

# The tool to use to create environments. May be "conda",
# "virtualenv", "mamba" (above 3.8)
# or other value depending on the plugins in use.
# If missing or the empty string, the tool will be automatically
# determined by looking for tools on the PATH environment
# variable.
environment_type = "virtualenv"

# The base URL to show a commit for the project.
show_commit_url = "http://github.com/airspeed-velocity/asv/commit/"

# The Pythons you'd like to test against. If not provided, defaults
# to the current version of Python used to run `asv`.
pythons = ["3.12"]

# The directory (relative to the current directory) that benchmarks are stored in.
# If not provided, defaults to "benchmarks"
# benchmark_dir = "benchmarks"

# The directory (relative to the current directory) to cache the Python
# environments in. If not provided, defaults to "env"
env_dir = ".asv/env"

# The directory (relative to the current directory) that raw benchmark
# results are stored in. If not provided, defaults to "results".
results_dir = ".asv/results"

# The directory (relative to the current directory) that the html tree
# should be written to. If not provided, defaults to "html".
html_dir = ".asv/html"

# The matrix of dependencies to test.  Each key is the name of a
# package (in PyPI) and the values are version numbers.  An empty
# list or empty string indicates to just test against the default
# (latest) version. null indicates that the package is to not be
# installed. If the package to be tested is only available from
# PyPi, and the 'environment_type' is conda, then you can preface
# the package name by 'pip+', and the package will be installed via
# pip (with all the conda available packages installed first,
# followed by the pip installed packages).
[matrix.req]
six = []
